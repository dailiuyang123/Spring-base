<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 开启spring注解扫描功能 -->
    <!-- 启动注解-->
    <context:component-scan base-package="com">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!---->
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 开启扫描-->

    <!-- 引入properties -->
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="location" value="classpath:db/db.properties"/>-->
    <!--</bean>-->

<!--注意如果配致多个，spring factory 只会加载其中的一个-->
<!--读取配置文件  引入properties-->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="nullValue" value="@null" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="fileEncoding" value="UTF-8" />
        <property name="locations">
            <list>
                <value>classpath:/*.properties</value>
                <value>classpath:db/db.properties</value>
            </list>
        </property>
    </bean>

    <!-- 创建数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${mysql.driverClassName}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <!-- 创建sqlsessionfatory-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--创建mapper管理器 -->
        <property name="mapperLocations" value="classpath*:com/daily/mybatis/mapper/*.xml"/>
        <!--导入分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
        <!--打印SQL语句-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--配置 spring jdbc 框架 jdbcTemplet-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--创建dao 默认创建的实体类型为 userDao..................-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--选择dao层所在的位置-->
        <property name="basePackage" value="com.daily.mybatis.dao"></property>
        <!--选择依赖的sqlsesssionfactortry-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>

    </bean>
    <!--创建事物管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置注解使生效-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

</beans>